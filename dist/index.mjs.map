{
  "version": 3,
  "sources": ["../icu4x/lib/diplomat-runtime.mjs", "../icu4x/diplomat.config.mjs", "../icu4x/lib/diplomat-wasm.mjs", "../icu4x/lib/ICU4XError.mjs", "../icu4x/lib/ICU4XDataProvider.mjs", "../icu4x/lib/ICU4XGraphemeClusterBreakIteratorLatin1.mjs", "../icu4x/lib/ICU4XGraphemeClusterBreakIteratorUtf16.mjs", "../icu4x/lib/ICU4XGraphemeClusterBreakIteratorUtf8.mjs", "../icu4x/lib/ICU4XGraphemeClusterSegmenter.mjs", "../icu4x/lib/ICU4XLogger.mjs", "../index.mjs"],
  "sourcesContent": ["export function readString8(wasm, ptr, len) {\n  const buf = new Uint8Array(wasm.memory.buffer, ptr, len);\n  return (new TextDecoder(\"utf-8\")).decode(buf)\n}\n\nexport function readString16(wasm, ptr, len) {\n  const buf = new Uint16Array(wasm.memory.buffer, ptr, len);\n  return String.fromCharCode.apply(null, buf)\n}\n\nexport function withDiplomatWrite(wasm, callback) {\n  const write = wasm.diplomat_buffer_write_create(0);\n  try {\n    callback(write);\n    const outStringPtr = wasm.diplomat_buffer_write_get_bytes(write);\n    if (outStringPtr == null) {\n      throw FFIError(\"Out of memory\");\n    }\n    const outStringLen = wasm.diplomat_buffer_write_len(write);\n    return readString8(wasm, outStringPtr, outStringLen);\n  } finally {\n    wasm.diplomat_buffer_write_destroy(write);\n  }\n}\n\nexport class FFIError extends Error {\n  constructor(error_value) {\n    super(\"Error over FFI\");\n    this.error_value = error_value; // (2)\n  }\n}\n\nexport function extractCodePoint(str, param) {\n  const cp = str.codePointAt?.(0);\n  if ((!cp && cp !== 0) || [...str]?.length != 1) {\n    throw new TypeError(`Expected single-character string for char parameter ${param}, found ${str}`);\n  }\n  return cp;\n}\n\n// Get the pointer returned by an FFI function\n//\n// It's tempting to call `(new Uint32Array(wasm.memory.buffer, FFI_func(), 1))[0]`.\n// However, there's a chance that `wasm.memory.buffer` will be resized between\n// the time it's accessed and the time it's used, invalidating the view.\n// This function ensures that the view into wasm memory is fresh.\n//\n// This is used for methods that return multiple types into a wasm buffer, where\n// one of those types is another ptr. Call this method to get access to the returned\n// ptr, so the return buffer can be freed.\nexport function ptrRead(wasm, ptr) {\n  return (new Uint32Array(wasm.memory.buffer, ptr, 1))[0];\n}\n\n// Get the flag of a result type.\nexport function resultFlag(wasm, ptr, offset) {\n  return (new Uint8Array(wasm.memory.buffer, ptr + offset, 1))[0];\n}\n\n// Get the discriminant of a Rust enum.\nexport function enumDiscriminant(wasm, ptr) {\n  return (new Int32Array(wasm.memory.buffer, ptr, 1))[0]\n}\n\n// A wrapper around a slice of WASM memory that can be freed manually or\n// automatically by the garbage collector.\n//\n// This type is necessary for Rust functions that take a `&str` or `&[T]`, since\n// they can create an edge to this object if they borrow from the str/slice,\n// or we can manually free the WASM memory if they don't.\nexport class DiplomatBuf {\n  static str8 = (wasm, string) => {\n    var utf8Length = 0;\n    for (const codepointString of string) {\n      let codepoint = codepointString.codePointAt(0);\n      if (codepoint < 0x80) {\n        utf8Length += 1\n      } else if (codepoint < 0x800) {\n        utf8Length += 2\n      } else if (codepoint < 0x10000) {\n        utf8Length += 3\n      } else {\n        utf8Length += 4\n      }\n    }\n\n    const ptr = wasm.diplomat_alloc(utf8Length, 1);\n\n    const result = (new TextEncoder()).encodeInto(string, new Uint8Array(wasm.memory.buffer, ptr, utf8Length));\n    console.assert(string.length == result.read && utf8Length == result.written, \"UTF-8 write error\");\n\n    return new DiplomatBuf(ptr, utf8Length, () => wasm.diplomat_free(ptr, utf8Length, 1));\n  }\n\n  static str16 = (wasm, string) => {\n    const byteLength = string.length * 2;\n    const ptr = wasm.diplomat_alloc(byteLength, 2);\n\n    const destination = new Uint16Array(wasm.memory.buffer, ptr, string.length);\n    for (var i = 0; i < string.length; i++) {\n      destination[i] = string.charCodeAt(i);\n    }\n\n    return new DiplomatBuf(ptr, string.length, () => wasm.diplomat_free(ptr, byteLength, 2));\n  }\n\n  static slice = (wasm, list, rustType) => {\n    const elementSize = rustType == \"u8\" || rustType == \"i8\" || rustType == \"bool\" ? 1 :\n      rustType == \"u16\" || rustType == \"i16\" ? 2 :\n        rustType == \"u64\" || rustType == \"i64\" || rustType == \"f64\" ? 8 :\n          4;\n\n    const byteLength = list.length * elementSize;\n    const ptr = wasm.diplomat_alloc(byteLength, elementSize);\n\n    // Create an array view of the buffer. This gives us the `set` method which correctly handles untyped values\n    const destination =\n      rustType == \"u8\" || rustType == \"bool\" ? new Uint8Array(wasm.memory.buffer, ptr, byteLength) :\n        rustType == \"i8\" ? new Int8Array(wasm.memory.buffer, ptr, byteLength) :\n          rustType == \"u16\" ? new Uint16Array(wasm.memory.buffer, ptr, byteLength) :\n            rustType == \"i16\" ? new Int16Array(wasm.memory.buffer, ptr, byteLength) :\n              rustType == \"i32\" || rustType == \"isize\" ? new Int32Array(wasm.memory.buffer, ptr, byteLength) :\n                rustType == \"u64\" ? new BigUint64Array(wasm.memory.buffer, ptr, byteLength) :\n                  rustType == \"i64\" ? new BigInt64Array(wasm.memory.buffer, ptr, byteLength) :\n                    rustType == \"f32\" ? new Float32Array(wasm.memory.buffer, ptr, byteLength) :\n                      rustType == \"f64\" ? new Float64Array(wasm.memory.buffer, ptr, byteLength) :\n                        new Uint32Array(wasm.memory.buffer, ptr, byteLength);\n    destination.set(list);\n\n    return new DiplomatBuf(ptr, list.length, () => wasm.diplomat_free(ptr, byteLength, elementSize));\n  }\n\n  constructor(ptr, size, free) {\n    this.ptr = ptr;\n    this.size = size;\n    // Generated code calls one of methods these for each allocation, to either\n    // free directly after the FFI call, to leak (to create a &'static), or to\n    // register the buffer with the garbage collector (to create a &'a).\n    this.free = free;\n    this.leak = () => { };\n    this.garbageCollect = () => DiplomatBufferFinalizer.register(this, this.free);\n  }\n}\n\nconst DiplomatBufferFinalizer = new FinalizationRegistry(free => free());\n", "export default { wasm_path: new URL('wasm/icu_capi.wasm', import.meta.url) };\n", "import cfg from '../diplomat.config.mjs';\nimport {readString8} from './diplomat-runtime.mjs'\n\nlet wasm;\n\nconst imports = {\n  env: {\n    diplomat_console_debug_js(ptr, len) {\n      console.debug(readString8(wasm, ptr, len));\n    },\n    diplomat_console_error_js(ptr, len) {\n      console.error(readString8(wasm, ptr, len));\n    },\n    diplomat_console_info_js(ptr, len) {\n      console.info(readString8(wasm, ptr, len));\n    },\n    diplomat_console_log_js(ptr, len) {\n      console.log(readString8(wasm, ptr, len));\n    },\n    diplomat_console_warn_js(ptr, len) {\n      console.warn(readString8(wasm, ptr, len));\n    },\n    diplomat_throw_error_js(ptr, len) {\n      throw new Error(readString8(wasm, ptr, len));\n    }\n  }\n}\n\nif (globalThis.process?.getBuiltinModule) {\n  // Node (>=22)\n  const fs = globalThis.process.getBuiltinModule('fs');\n  const wasmFile = new Uint8Array(fs.readFileSync(cfg['wasm_path']));\n  const loadedWasm = await WebAssembly.instantiate(wasmFile, imports);\n  wasm = loadedWasm.instance.exports;\n} else if (globalThis.process) {\n  // Node (<22)\n  const fs = await import('fs');\n  const wasmFile = new Uint8Array(fs.readFileSync(cfg['wasm_path']));\n  const loadedWasm = await WebAssembly.instantiate(wasmFile, imports);\n  wasm = loadedWasm.instance.exports;\n} else {\n  // Browser\n  const loadedWasm = await WebAssembly.instantiateStreaming(fetch(cfg['wasm_path']), imports);\n  wasm = loadedWasm.instance.exports;\n}\n\nwasm.diplomat_init();\nif (cfg['init'] !== undefined) {\n  cfg['init'](wasm);\n}\n\nexport default wasm;\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\n\nexport const ICU4XError_js_to_rust = {\n  \"UnknownError\": 0,\n  \"DataMissingDataMarkerError\": 256,\n  \"DataMissingVariantError\": 257,\n  \"DataMissingLocaleError\": 258,\n  \"DataNeedsVariantError\": 259,\n  \"DataNeedsLocaleError\": 260,\n  \"DataExtraneousLocaleError\": 261,\n  \"DataFilteredResourceError\": 262,\n  \"DataMismatchedTypeError\": 263,\n  \"DataMissingPayloadError\": 264,\n  \"DataInvalidStateError\": 265,\n  \"DataCustomError\": 266,\n  \"DataIoError\": 267,\n  \"DataUnavailableBufferFormatError\": 268,\n  \"DataMismatchedAnyBufferError\": 269,\n  \"LocaleParserLanguageError\": 513,\n  \"LocaleParserSubtagError\": 514,\n  \"LocaleParserExtensionError\": 515,\n  \"DataStructValidityError\": 768,\n  \"PropertyUnexpectedPropertyNameError\": 1026,\n  \"FixedDecimalLimitError\": 1280,\n  \"FixedDecimalSyntaxError\": 1281,\n  \"PluralsParseError\": 1536,\n  \"CalendarOutOfRangeError\": 1795,\n  \"CalendarUnknownEraError\": 1796,\n  \"CalendarUnknownMonthCodeError\": 1797,\n  \"DateTimePatternError\": 2048,\n  \"DateTimeMissingInputFieldError\": 2049,\n  \"DateTimeSkeletonError\": 2050,\n  \"DateTimeUnsupportedFieldError\": 2051,\n  \"DateTimeUnsupportedOptionsError\": 2052,\n  \"DateTimeMissingWeekdaySymbolError\": 2053,\n  \"DateTimeMissingMonthSymbolError\": 2054,\n  \"DateTimeFixedDecimalError\": 2055,\n  \"DateTimeMismatchedCalendarError\": 2056,\n  \"TimeZoneInvalidOffsetError\": 2561,\n  \"TimeZoneInvalidIdError\": 2563,\n};\n\nexport const ICU4XError_rust_to_js = {\n  [0]: \"UnknownError\",\n  [256]: \"DataMissingDataMarkerError\",\n  [257]: \"DataMissingVariantError\",\n  [258]: \"DataMissingLocaleError\",\n  [259]: \"DataNeedsVariantError\",\n  [260]: \"DataNeedsLocaleError\",\n  [261]: \"DataExtraneousLocaleError\",\n  [262]: \"DataFilteredResourceError\",\n  [263]: \"DataMismatchedTypeError\",\n  [264]: \"DataMissingPayloadError\",\n  [265]: \"DataInvalidStateError\",\n  [266]: \"DataCustomError\",\n  [267]: \"DataIoError\",\n  [268]: \"DataUnavailableBufferFormatError\",\n  [269]: \"DataMismatchedAnyBufferError\",\n  [513]: \"LocaleParserLanguageError\",\n  [514]: \"LocaleParserSubtagError\",\n  [515]: \"LocaleParserExtensionError\",\n  [768]: \"DataStructValidityError\",\n  [1026]: \"PropertyUnexpectedPropertyNameError\",\n  [1280]: \"FixedDecimalLimitError\",\n  [1281]: \"FixedDecimalSyntaxError\",\n  [1536]: \"PluralsParseError\",\n  [1795]: \"CalendarOutOfRangeError\",\n  [1796]: \"CalendarUnknownEraError\",\n  [1797]: \"CalendarUnknownMonthCodeError\",\n  [2048]: \"DateTimePatternError\",\n  [2049]: \"DateTimeMissingInputFieldError\",\n  [2050]: \"DateTimeSkeletonError\",\n  [2051]: \"DateTimeUnsupportedFieldError\",\n  [2052]: \"DateTimeUnsupportedOptionsError\",\n  [2053]: \"DateTimeMissingWeekdaySymbolError\",\n  [2054]: \"DateTimeMissingMonthSymbolError\",\n  [2055]: \"DateTimeFixedDecimalError\",\n  [2056]: \"DateTimeMismatchedCalendarError\",\n  [2561]: \"TimeZoneInvalidOffsetError\",\n  [2563]: \"TimeZoneInvalidIdError\",\n};\n\nexport const ICU4XError = {\n  \"UnknownError\": \"UnknownError\",\n  \"DataMissingDataMarkerError\": \"DataMissingDataMarkerError\",\n  \"DataMissingVariantError\": \"DataMissingVariantError\",\n  \"DataMissingLocaleError\": \"DataMissingLocaleError\",\n  \"DataNeedsVariantError\": \"DataNeedsVariantError\",\n  \"DataNeedsLocaleError\": \"DataNeedsLocaleError\",\n  \"DataExtraneousLocaleError\": \"DataExtraneousLocaleError\",\n  \"DataFilteredResourceError\": \"DataFilteredResourceError\",\n  \"DataMismatchedTypeError\": \"DataMismatchedTypeError\",\n  \"DataMissingPayloadError\": \"DataMissingPayloadError\",\n  \"DataInvalidStateError\": \"DataInvalidStateError\",\n  \"DataCustomError\": \"DataCustomError\",\n  \"DataIoError\": \"DataIoError\",\n  \"DataUnavailableBufferFormatError\": \"DataUnavailableBufferFormatError\",\n  \"DataMismatchedAnyBufferError\": \"DataMismatchedAnyBufferError\",\n  \"LocaleParserLanguageError\": \"LocaleParserLanguageError\",\n  \"LocaleParserSubtagError\": \"LocaleParserSubtagError\",\n  \"LocaleParserExtensionError\": \"LocaleParserExtensionError\",\n  \"DataStructValidityError\": \"DataStructValidityError\",\n  \"PropertyUnexpectedPropertyNameError\": \"PropertyUnexpectedPropertyNameError\",\n  \"FixedDecimalLimitError\": \"FixedDecimalLimitError\",\n  \"FixedDecimalSyntaxError\": \"FixedDecimalSyntaxError\",\n  \"PluralsParseError\": \"PluralsParseError\",\n  \"CalendarOutOfRangeError\": \"CalendarOutOfRangeError\",\n  \"CalendarUnknownEraError\": \"CalendarUnknownEraError\",\n  \"CalendarUnknownMonthCodeError\": \"CalendarUnknownMonthCodeError\",\n  \"DateTimePatternError\": \"DateTimePatternError\",\n  \"DateTimeMissingInputFieldError\": \"DateTimeMissingInputFieldError\",\n  \"DateTimeSkeletonError\": \"DateTimeSkeletonError\",\n  \"DateTimeUnsupportedFieldError\": \"DateTimeUnsupportedFieldError\",\n  \"DateTimeUnsupportedOptionsError\": \"DateTimeUnsupportedOptionsError\",\n  \"DateTimeMissingWeekdaySymbolError\": \"DateTimeMissingWeekdaySymbolError\",\n  \"DateTimeMissingMonthSymbolError\": \"DateTimeMissingMonthSymbolError\",\n  \"DateTimeFixedDecimalError\": \"DateTimeFixedDecimalError\",\n  \"DateTimeMismatchedCalendarError\": \"DateTimeMismatchedCalendarError\",\n  \"TimeZoneInvalidOffsetError\": \"TimeZoneInvalidOffsetError\",\n  \"TimeZoneInvalidIdError\": \"TimeZoneInvalidIdError\",\n};\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\nimport { ICU4XError_js_to_rust, ICU4XError_rust_to_js } from \"./ICU4XError.mjs\"\n\nconst ICU4XDataProvider_box_destroy_registry = new FinalizationRegistry(underlying => {\n  wasm.ICU4XDataProvider_destroy(underlying);\n});\n\nexport class ICU4XDataProvider {\n  #lifetimeEdges = [];\n  constructor(underlying, owned, edges) {\n    this.underlying = underlying;\n    this.#lifetimeEdges.push(...edges);\n    if (owned) {\n      ICU4XDataProvider_box_destroy_registry.register(this, underlying);\n    }\n  }\n\n  static create_compiled() {\n    return new ICU4XDataProvider(wasm.ICU4XDataProvider_create_compiled(), true, []);\n  }\n\n  static create_fs(arg_path) {\n    const buf_arg_path = diplomatRuntime.DiplomatBuf.str8(wasm, arg_path);\n    const diplomat_out = (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XDataProvider_create_fs(diplomat_receive_buffer, buf_arg_path.ptr, buf_arg_path.size);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = new ICU4XDataProvider(diplomatRuntime.ptrRead(wasm, diplomat_receive_buffer), true, []);\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n    buf_arg_path.free();\n    return diplomat_out;\n  }\n\n  static create_from_byte_slice(arg_blob) {\n    const buf_arg_blob = diplomatRuntime.DiplomatBuf.slice(wasm, arg_blob, \"u8\");\n    const diplomat_out = (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XDataProvider_create_from_byte_slice(diplomat_receive_buffer, buf_arg_blob.ptr, buf_arg_blob.size);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = new ICU4XDataProvider(diplomatRuntime.ptrRead(wasm, diplomat_receive_buffer), true, []);\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n    buf_arg_blob.leak();\n    return diplomat_out;\n  }\n\n  static create_empty() {\n    return new ICU4XDataProvider(wasm.ICU4XDataProvider_create_empty(), true, []);\n  }\n\n  fork_by_key(arg_other) {\n    return (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XDataProvider_fork_by_key(diplomat_receive_buffer, this.underlying, arg_other.underlying);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = {};\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n  }\n\n  fork_by_locale(arg_other) {\n    return (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XDataProvider_fork_by_locale(diplomat_receive_buffer, this.underlying, arg_other.underlying);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = {};\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n  }\n\n  enable_locale_fallback() {\n    return (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XDataProvider_enable_locale_fallback(diplomat_receive_buffer, this.underlying);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = {};\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n  }\n\n  enable_locale_fallback_with(arg_fallbacker) {\n    return (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XDataProvider_enable_locale_fallback_with(diplomat_receive_buffer, this.underlying, arg_fallbacker.underlying);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = {};\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n  }\n}\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\n\nconst ICU4XGraphemeClusterBreakIteratorLatin1_box_destroy_registry = new FinalizationRegistry(underlying => {\n  wasm.ICU4XGraphemeClusterBreakIteratorLatin1_destroy(underlying);\n});\n\nexport class ICU4XGraphemeClusterBreakIteratorLatin1 {\n  #lifetimeEdges = [];\n  constructor(underlying, owned, edges) {\n    this.underlying = underlying;\n    this.#lifetimeEdges.push(...edges);\n    if (owned) {\n      ICU4XGraphemeClusterBreakIteratorLatin1_box_destroy_registry.register(this, underlying);\n    }\n  }\n\n  next() {\n    return wasm.ICU4XGraphemeClusterBreakIteratorLatin1_next(this.underlying);\n  }\n}\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\n\nconst ICU4XGraphemeClusterBreakIteratorUtf16_box_destroy_registry = new FinalizationRegistry(underlying => {\n  wasm.ICU4XGraphemeClusterBreakIteratorUtf16_destroy(underlying);\n});\n\nexport class ICU4XGraphemeClusterBreakIteratorUtf16 {\n  #lifetimeEdges = [];\n  constructor(underlying, owned, edges) {\n    this.underlying = underlying;\n    this.#lifetimeEdges.push(...edges);\n    if (owned) {\n      ICU4XGraphemeClusterBreakIteratorUtf16_box_destroy_registry.register(this, underlying);\n    }\n  }\n\n  next() {\n    return wasm.ICU4XGraphemeClusterBreakIteratorUtf16_next(this.underlying);\n  }\n}\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\n\nconst ICU4XGraphemeClusterBreakIteratorUtf8_box_destroy_registry = new FinalizationRegistry(underlying => {\n  wasm.ICU4XGraphemeClusterBreakIteratorUtf8_destroy(underlying);\n});\n\nexport class ICU4XGraphemeClusterBreakIteratorUtf8 {\n  #lifetimeEdges = [];\n  constructor(underlying, owned, edges) {\n    this.underlying = underlying;\n    this.#lifetimeEdges.push(...edges);\n    if (owned) {\n      ICU4XGraphemeClusterBreakIteratorUtf8_box_destroy_registry.register(this, underlying);\n    }\n  }\n\n  next() {\n    return wasm.ICU4XGraphemeClusterBreakIteratorUtf8_next(this.underlying);\n  }\n}\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\nimport { ICU4XError_js_to_rust, ICU4XError_rust_to_js } from \"./ICU4XError.mjs\"\nimport { ICU4XGraphemeClusterBreakIteratorLatin1 } from \"./ICU4XGraphemeClusterBreakIteratorLatin1.mjs\"\nimport { ICU4XGraphemeClusterBreakIteratorUtf16 } from \"./ICU4XGraphemeClusterBreakIteratorUtf16.mjs\"\nimport { ICU4XGraphemeClusterBreakIteratorUtf8 } from \"./ICU4XGraphemeClusterBreakIteratorUtf8.mjs\"\n\nconst ICU4XGraphemeClusterSegmenter_box_destroy_registry = new FinalizationRegistry(underlying => {\n  wasm.ICU4XGraphemeClusterSegmenter_destroy(underlying);\n});\n\nexport class ICU4XGraphemeClusterSegmenter {\n  #lifetimeEdges = [];\n  constructor(underlying, owned, edges) {\n    this.underlying = underlying;\n    this.#lifetimeEdges.push(...edges);\n    if (owned) {\n      ICU4XGraphemeClusterSegmenter_box_destroy_registry.register(this, underlying);\n    }\n  }\n\n  static create(arg_provider) {\n    return (() => {\n      const diplomat_receive_buffer = wasm.diplomat_alloc(5, 4);\n      wasm.ICU4XGraphemeClusterSegmenter_create(diplomat_receive_buffer, arg_provider.underlying);\n      const is_ok = diplomatRuntime.resultFlag(wasm, diplomat_receive_buffer, 4);\n      if (is_ok) {\n        const ok_value = new ICU4XGraphemeClusterSegmenter(diplomatRuntime.ptrRead(wasm, diplomat_receive_buffer), true, []);\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        return ok_value;\n      } else {\n        const throw_value = ICU4XError_rust_to_js[diplomatRuntime.enumDiscriminant(wasm, diplomat_receive_buffer)];\n        wasm.diplomat_free(diplomat_receive_buffer, 5, 4);\n        throw new diplomatRuntime.FFIError(throw_value);\n      }\n    })();\n  }\n\n  segment_utf8(arg_input) {\n    const buf_arg_input = diplomatRuntime.DiplomatBuf.str8(wasm, arg_input);\n    const diplomat_out = new ICU4XGraphemeClusterBreakIteratorUtf8(wasm.ICU4XGraphemeClusterSegmenter_segment_utf8(this.underlying, buf_arg_input.ptr, buf_arg_input.size), true, [this, buf_arg_input]);\n    buf_arg_input.garbageCollect();\n    return diplomat_out;\n  }\n\n  segment_utf16(arg_input) {\n    const buf_arg_input = diplomatRuntime.DiplomatBuf.str16(wasm, arg_input);\n    const diplomat_out = new ICU4XGraphemeClusterBreakIteratorUtf16(wasm.ICU4XGraphemeClusterSegmenter_segment_utf16(this.underlying, buf_arg_input.ptr, buf_arg_input.size), true, [this, buf_arg_input]);\n    buf_arg_input.garbageCollect();\n    return diplomat_out;\n  }\n\n  segment_latin1(arg_input) {\n    const buf_arg_input = diplomatRuntime.DiplomatBuf.slice(wasm, arg_input, \"u8\");\n    const diplomat_out = new ICU4XGraphemeClusterBreakIteratorLatin1(wasm.ICU4XGraphemeClusterSegmenter_segment_latin1(this.underlying, buf_arg_input.ptr, buf_arg_input.size), true, [this, buf_arg_input]);\n    buf_arg_input.garbageCollect();\n    return diplomat_out;\n  }\n}\n", "import wasm from \"./diplomat-wasm.mjs\"\nimport * as diplomatRuntime from \"./diplomat-runtime.mjs\"\n\nconst ICU4XLogger_box_destroy_registry = new FinalizationRegistry(underlying => {\n  wasm.ICU4XLogger_destroy(underlying);\n});\n\nexport class ICU4XLogger {\n  #lifetimeEdges = [];\n  constructor(underlying, owned, edges) {\n    this.underlying = underlying;\n    this.#lifetimeEdges.push(...edges);\n    if (owned) {\n      ICU4XLogger_box_destroy_registry.register(this, underlying);\n    }\n  }\n\n  static init_simple_logger() {\n    return wasm.ICU4XLogger_init_simple_logger();\n  }\n}\n", "export { ICU4XDataProvider, ICU4XGraphemeClusterSegmenter } from \"./icu4x/lib/index.mjs\";\nimport { ICU4XDataProvider, ICU4XGraphemeClusterSegmenter } from \"./icu4x/lib/index.mjs\";\n\n// https://tc39.es/ecma402/#sec-getoption\nfunction GetStringOption(options, property, values, defaultValue) {\n\tlet value = options[property];\n\tif (value === undefined) {\n\t\treturn defaultValue;\n\t}\n\tvalue = String(value);\n\tif (values.indexOf(value) === -1) {\n\t\tthrow new RangeError(`Invalid string option: ${property}=${value}`);\n\t}\n\treturn value;\n}\n\nexport class SegmenterImplICU4X {\n\tconstructor(_locales, options) {\n\t\tconst granularity = GetStringOption(\n\t\t\toptions,\n\t\t\t\"granularity\",\n\t\t\t[\"grapheme\", \"word\", \"sentence\"],\n\t\t\t\"grapheme\"\n\t\t);\n\t\tif (granularity === \"grapheme\") {\n\t\t\tthis.inner = ICU4XGraphemeClusterSegmenter.create(ICU4XDataProvider.create_compiled());\n\t\t} else {\n\t\t\tthrow new RangeError(`Granularity not yet supported: ${granularity}`);\n\t\t}\n\t}\n\n\tsegment(string) {\n\t\tstring = String(string);\n\t\treturn new SegmentsImplICU4X(this, string);\n\t}\n}\n\nexport class SegmentsImplICU4X {\n\tconstructor(segmenter, string) {\n\t\tthis.segmenter = segmenter;\n\t\tthis.string = string;\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn new IntlSegmenterIteratorImplICU4X(this.segmenter, this.string);\n\t}\n}\n\n// https://tc39.es/ecma262/#sec-createiterresultobject\nfunction CreateIterResultObject(value, done) {\n\treturn { value, done };\n}\n\n// https://tc39.es/ecma402/#sec-createsegmentdataobject\nfunction CreateSegmentDataObject(segmenter, string, startIndex, endIndex) {\n\tlet segment = string.substr(startIndex, endIndex);\n\t// TODO: isWordLike\n\treturn {\n\t\tsegment,\n\t\tindex: startIndex,\n\t\tinput: string,\n\t};\n}\n\nexport class IntlSegmenterIteratorImplICU4X {\n\tconstructor(segmenter, string) {\n\t\tthis.segmenter = segmenter;\n\t\tthis.breakIterator = segmenter.inner.segment_utf16(string);\n\t\tthis.startIndex = this.breakIterator.next();\n\t\tthis.string = string;\n\t}\n\n\tnext() {\n\t\tif (this.startIndex >= this.string.length) {\n\t\t\treturn CreateIterResultObject(undefined, true);\n\t\t}\n\t\tlet endIndex = this.breakIterator.next();\n\t\tlet segmentData = CreateSegmentDataObject(this.segmenter, this.string, this.startIndex, endIndex);\n\t\tthis.startIndex = endIndex;\n\t\treturn CreateIterResultObject(segmentData, false);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["readString8", "wasm", "ptr", "len", "buf", "FFIError", "error_value", "ptrRead", "wasm", "ptr", "resultFlag", "offset", "enumDiscriminant", "DiplomatBuf", "_DiplomatBuf", "string", "utf8Length", "codepointString", "codepoint", "result", "byteLength", "destination", "i", "list", "rustType", "elementSize", "size", "free", "DiplomatBufferFinalizer", "diplomat_config_default", "wasm", "imports", "ptr", "len", "readString8", "fs", "wasmFile", "diplomat_config_default", "diplomat_wasm_default", "ICU4XError_rust_to_js", "ICU4XDataProvider_box_destroy_registry", "underlying", "diplomat_wasm_default", "ICU4XDataProvider", "_ICU4XDataProvider", "#lifetimeEdges", "owned", "edges", "arg_path", "buf_arg_path", "DiplomatBuf", "diplomat_out", "diplomat_receive_buffer", "resultFlag", "ok_value", "ptrRead", "throw_value", "ICU4XError_rust_to_js", "enumDiscriminant", "FFIError", "arg_blob", "buf_arg_blob", "arg_other", "arg_fallbacker", "ICU4XGraphemeClusterBreakIteratorLatin1_box_destroy_registry", "underlying", "diplomat_wasm_default", "ICU4XGraphemeClusterBreakIteratorLatin1", "#lifetimeEdges", "owned", "edges", "ICU4XGraphemeClusterBreakIteratorUtf16_box_destroy_registry", "underlying", "diplomat_wasm_default", "ICU4XGraphemeClusterBreakIteratorUtf16", "#lifetimeEdges", "owned", "edges", "ICU4XGraphemeClusterBreakIteratorUtf8_box_destroy_registry", "underlying", "diplomat_wasm_default", "ICU4XGraphemeClusterBreakIteratorUtf8", "#lifetimeEdges", "owned", "edges", "ICU4XGraphemeClusterSegmenter_box_destroy_registry", "underlying", "diplomat_wasm_default", "ICU4XGraphemeClusterSegmenter", "_ICU4XGraphemeClusterSegmenter", "#lifetimeEdges", "owned", "edges", "arg_provider", "diplomat_receive_buffer", "resultFlag", "ok_value", "ptrRead", "throw_value", "ICU4XError_rust_to_js", "enumDiscriminant", "FFIError", "arg_input", "buf_arg_input", "DiplomatBuf", "diplomat_out", "ICU4XGraphemeClusterBreakIteratorUtf8", "ICU4XGraphemeClusterBreakIteratorUtf16", "ICU4XGraphemeClusterBreakIteratorLatin1", "ICU4XLogger_box_destroy_registry", "underlying", "diplomat_wasm_default", "GetStringOption", "options", "property", "values", "defaultValue", "value", "SegmenterImplICU4X", "_locales", "granularity", "ICU4XGraphemeClusterSegmenter", "ICU4XDataProvider", "string", "SegmentsImplICU4X", "segmenter", "IntlSegmenterIteratorImplICU4X", "CreateIterResultObject", "done", "CreateSegmentDataObject", "startIndex", "endIndex", "segmentData"]
}
